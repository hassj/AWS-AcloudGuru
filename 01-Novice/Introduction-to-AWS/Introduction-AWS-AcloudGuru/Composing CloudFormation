Hello, Cloud Gurus and welcome to Composing CloudFormation.
In this lesson, we're going to learn all about AWS CloudFormation.
So let's get started. CloudFormation is an AWS service,
which allows you to create infrastructure such as an EC2 virtual machine,
or a VPC, or even a CloudFront content delivery network,
just using texts in a file. These files are called templates.
It's basically programming. There's a specific structure you must follow,
and AWS allow both JSON and YAML syntax to be used with
CloudFormation shown here on the left is JSON and on the right is YAML.
You specify all the infrastructure you want to create in that file,
then you give this file to the CloudFormation service,
and it automatically creates your infrastructure for you.
This infrastructure is called a stack. Imagine a stack of plates,
your infrastructure is all those plates stacked upon each other, a database,
an EC2 instance, and a domain in route 53.
This is kind of an amazing thing.
The ability to define your cloud infrastructure with code opens up lots
of new doors to your organization in regards to functionality,
automation and scale. What do I mean by that? Well, let's take a closer look.
CloudFormation opens up a whole new world of possibilities.
If you're able to define your organization's code in a text file,
that means combined with the use of version control systems, such as Git,
that programmers use to track the changes they make in their code,
you will now have a full history of your organization's entire
infrastructure in a single text file. Something breaks,
you can immediately go and see what the last version of your CloudFormation
template looked like. See what changed,
and you should know what caused the problem pretty quickly.
Version control systems also allow multiple people to work on your
infrastructure. at the same time.
You could have your compute developers work on their part of the template and
the networking team work on the networking part of the template. In fact,
CloudFormation even supports nesting templates,
which means you could have a master template,
which calls all the other templates.
So maybe your networking team are the only people who are allowed to edit the
VPC CloudFormation file. Let's talk about automation,
which is a huge benefit of DevOps,
which is a term I'm yet to use in this course.
So if a DevOps engineer wants to automate everything he can,
he's going to look for ways to do so.
CloudFormation allows a DevOps engineer to automate the creation of his
infrastructure. If your CloudFormation template is already written,
it simply takes a few clicks to get your infrastructure created.
This automation also benefits developers.
If you work somewhere and want to test a new feature you've created for your
website, you probably don't want to test it on a live website.
With CloudFormation,
you can spin up your entire website quickly and automatically,
test your features and then remove it when you're done.
You save time because the template is already written and you save money because
the infrastructure is removed immediately after you've tested your feature.
Regarding scale, well by now you know what a region is.
If you want to scale your organization's website across multiple AWS accounts
and regions,
you would normally have to duplicate your infrastructure in all those different
accounts and regions, one-by-one. With CloudFormation,
you can now just spin up the same infrastructure in a different region or
account with the same template. Of course,
there are a few things you need to make region specific in your template,
but you can also build in multi-region functionality,
which will make a single template work anywhere.
Before I finish up,
I want to point out one of my favorite things and it showed up a little earlier
in this lesson, and this is it.
This is a complete CloudFormation template. This is all the code,
which is required to spin up an EC2 instance using CloudFormation.
You can feed this code into CloudFormation and it's a valid template.
It will only work in North Virginia due to image IDs,
being unique to each region. It won't have login details defined.
So you can't look into the server you create.
No firewall rules are defined so you can't connect to it anyway,
but it will work and it will create a valid CloudFormation stack containing an
EC2 instance. I think that's pretty cool,
and it's a great starting place if you're interested in writing your own
CloudFormation templates. Okay, that's all for CloudFormation.
Thank you for watching. If you have any questions, please let me know.
Otherwise, feel free to move on to the next lesson.